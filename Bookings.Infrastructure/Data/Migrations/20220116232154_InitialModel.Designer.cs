// <auto-generated />
using System;
using Bookings.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bookings.Infrastructure.Data.Migrations
{
    [DbContext(typeof(BookingContext))]
    [Migration("20220116232154_InitialModel")]
    partial class InitialModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bookings.Application.Entities.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Checkin")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Checkout")
                        .HasColumnType("datetime");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("HotelId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Bookings.Application.Entities.Hotel", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(8,6)");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(9,6)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NumberOfRooms")
                        .HasColumnType("int");

                    b.HasKey("HotelId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            HotelId = 1,
                            Activo = true,
                            Country = "Colombia",
                            Description = "Hotel 1",
                            Latitude = 0m,
                            Length = 0m,
                            Name = "Hotel 1",
                            NumberOfRooms = 10
                        },
                        new
                        {
                            HotelId = 2,
                            Activo = true,
                            Country = "Colombia",
                            Description = "Hotel 2",
                            Latitude = 0m,
                            Length = 0m,
                            Name = "Hotel 2",
                            NumberOfRooms = 10
                        },
                        new
                        {
                            HotelId = 3,
                            Activo = true,
                            Country = "Colombia",
                            Description = "Hotel 3",
                            Latitude = 0m,
                            Length = 0m,
                            Name = "Hotel 3",
                            NumberOfRooms = 10
                        });
                });

            modelBuilder.Entity("Bookings.Application.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FamilyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GivenName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Address = "Calle 1 # 56 - 34",
                            Email = "cliente1@gmail.com",
                            FamilyName = "Perez",
                            GivenName = "Pedro"
                        },
                        new
                        {
                            UserId = 2,
                            Address = "Calle 1 # 56 - 34",
                            Email = "cliente2@gmail.com",
                            FamilyName = "Bohorquez",
                            GivenName = "Camilo"
                        },
                        new
                        {
                            UserId = 3,
                            Address = "Calle 1 # 56 - 34",
                            Email = "cliente3@gmail.com",
                            FamilyName = "Marin",
                            GivenName = "Luz"
                        });
                });

            modelBuilder.Entity("Bookings.Application.Entities.Booking", b =>
                {
                    b.HasOne("Bookings.Application.Entities.Hotel", "Hotel")
                        .WithMany("Bookings")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bookings.Application.Entities.User", "User")
                        .WithMany("bookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bookings.Application.Entities.Hotel", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Bookings.Application.Entities.User", b =>
                {
                    b.Navigation("bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
